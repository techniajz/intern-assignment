<style>
  body{
      font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;
      font-size:14px;
  }
  h1{
      font-weight:bold;
  }
  h3 a{
      text-decoration: none;
  }
  h3{
      margin-bottom:20px;
  }
  .imgContainer{
      margin:10px auto;
      text-align:center;
  }
  .debugInfo{
      margin:20px 0;
      font-size:8px;
      color:#FFF;
  }
</style>
<script>
  setTimeout(()=>{
      window.location.href = '<%= downloadBuild %>';
  },3000);
</script>
<h1>Your download will start shortly!</h1>
<h3><a href="<%= downloadBuild %>">Click here</a> if it doesn't begin in a few seconds...</h3>
<div class="troubleshoot">
  <h1>Having trouble?</h1>
  The best way to update your Android application is to manually uninstall the previous build before installing a new version.
  <div class="imgContainer">
      <img width="250px" height="295px" src="<%= BASE_URL %>/img/media/NIrman Real Estate.png">
  </div>
  Then install the APK that will download here. You will need to allow application installs from unknown sources on your device.<br><br>
  <h1>I don't see a download...</h1>
  If you're having trouble downloading the update, please uninstall your version of the app manually, <b>then</b> visit <b><a href="<%= BASE_URL %>/auth/download_real_rstate">Real-State</a></b> directly.
</div>
<form action="" class="ajaxform" name="campaignLogsForm" id="campaignLogsForm" style="display:none;" method="post" accept-charset="utf-8">
  <input type="hidden" name="session_id" value="">
  <input type="hidden" name="os_name" value="android">
  <input type="hidden" name="os_version"  id="os_version">
</form><div class="debugInfo">
  <script>
      document.write(navigator.userAgent);

      window.addEventListener('load', (event) => {
          var module = {
              options: [],
              header: [navigator.platform, navigator.userAgent, navigator.appVersion, navigator.vendor, window.opera],
              dataos: [
                  { name: 'Windows Phone', value: 'Windows Phone', version: 'OS' },
                  { name: 'Windows', value: 'Win', version: 'NT' },
                  { name: 'iPhone', value: 'iPhone', version: 'OS' },
                  { name: 'iPad', value: 'iPad', version: 'OS' },
                  { name: 'Kindle', value: 'Silk', version: 'Silk' },
                  { name: 'Android', value: 'Android', version: 'Android' },
                  { name: 'PlayBook', value: 'PlayBook', version: 'OS' },
                  { name: 'BlackBerry', value: 'BlackBerry', version: '/' },
                  { name: 'Macintosh', value: 'Mac', version: 'OS X' },
                  { name: 'Linux', value: 'Linux', version: 'rv' },
                  { name: 'Palm', value: 'Palm', version: 'PalmOS' }
              ],
              databrowser: [
                  { name: 'Chrome', value: 'Chrome', version: 'Chrome' },
                  { name: 'Firefox', value: 'Firefox', version: 'Firefox' },
                  { name: 'Safari', value: 'Safari', version: 'Version' },
                  { name: 'Internet Explorer', value: 'MSIE', version: 'MSIE' },
                  { name: 'Opera', value: 'Opera', version: 'Opera' },
                  { name: 'BlackBerry', value: 'CLDC', version: 'CLDC' },
                  { name: 'Mozilla', value: 'Mozilla', version: 'Mozilla' }
              ],
              init: function () {
                  var agent = this.header.join(' '),
                      os = this.matchItem(agent, this.dataos),
                      browser = this.matchItem(agent, this.databrowser);
                  
                  return { os: os, browser: browser };
              },
              matchItem: function (string, data) {
                  var i = 0,
                      j = 0,
                      html = '',
                      regex,
                      regexv,
                      match,
                      matches,
                      version;
                  
                  for (i = 0; i < data.length; i += 1) {
                      regex = new RegExp(data[i].value, 'i');
                      match = regex.test(string);
                      if (match) {
                          regexv = new RegExp(data[i].version + '[- /:;]([\\d._]+)', 'i');
                          matches = string.match(regexv);
                          version = '';
                          if (matches) { if (matches[1]) { matches = matches[1]; } }
                          if (matches) {
                              matches = matches.split(/[._]+/);
                              for (j = 0; j < matches.length; j += 1) {
                                  if (j === 0) {
                                      version += matches[j] + '.';
                                  } else {
                                      version += matches[j];
                                  }
                              }
                          } else {
                              version = '0';
                          }
                          return {
                              name: data[i].name,
                              version: parseFloat(version)
                          };
                      }
                  }
                  return { name: 'unknown', version: 0 };
              }
          };
          
          var e = module.init();
          if(e.os != null && e.os.version != "") {
              $('#os_version').val(e.os.version);
              $('#campaignLogsForm').submit();
          }

      });
      function ajaxPageCallBack(){

      }
  </script>
</div>

<div id="log"></div>
